@model PharmaPlus.Models.ProductFormViewModel
@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Response.ContentEncoding = System.Text.Encoding.UTF8;
    Response.Charset = "utf-8";
}

<div class="admin-product-form">
    <div class="back-link">
        <a href="@Url.Action("Index")" class="btn btn-link">
            <i class="fas fa-arrow-left"></i> Quay lại danh sách
        </a>
    </div>
    
    <div class="card">
        <div class="card-header">
            <h1 class="card-title"><i class="fas fa-plus-circle"></i> Thêm sản phẩm mới</h1>
        </div>
        
        <div class="card-body">
            @using (Html.BeginForm("Create", "AdminProducts", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description)
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 5 })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price)
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", type = "number", step = "1000" })
                                        <div class="input-group-append">
                                            <span class="input-group-text">VNĐ</span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Stock)
                                    @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", type = "number", min = "0" })
                                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CategoryId)
                                    @Html.DropDownListFor(model => model.CategoryId, (SelectList)ViewBag.category_id, "-- Chọn danh mục --", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="custom-control custom-switch mt-4">
                                        @Html.CheckBoxFor(model => model.PrescriptionRequired, new { @class = "custom-control-input", id = "prescriptionSwitch" })
                                        <label class="custom-control-label" for="prescriptionSwitch">@Html.DisplayNameFor(model => model.PrescriptionRequired)</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="image-upload-container">
                            <div class="image-preview">
                                <img id="imagePreview" src="~/Content/images/no-image.png" alt="Ảnh sản phẩm" />
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ImageFile)
                                <input type="file" name="imageFile" id="imageFile" class="form-control-file" accept="image/*" onchange="previewImage(event)" />
                                <small class="form-text text-muted">Hỗ trợ các định dạng: JPG, PNG, GIF. Kích thước tối đa: 5MB.</small>
                            </div>
                        </div>
                    </div>
                </div>
                
                <hr />
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Lưu sản phẩm
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Hủy bỏ
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function previewImage(event) {
            var input = event.target;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                
                reader.onload = function(e) {
                    $("#imagePreview").attr("src", e.target.result);
                }
                
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

@section styles {
    <style>
        .admin-product-form {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .back-link {
            margin-bottom: 15px;
        }
        
        .image-upload-container {
            background: #f9f9f9;
            border: 1px solid #e3e6f0;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 20px;
        }
        
        .image-preview {
            width: 100%;
            height: 200px;
            background: #fff;
            border: 1px dashed #ccc;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            overflow: hidden;
        }
        
        .image-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        .form-actions {
            margin-top: 30px;
            text-align: center;
        }
        
        .form-actions button, .form-actions a {
            margin: 0 5px;
            min-width: 120px;
        }
        
        .custom-switch {
            padding-top: 10px;
        }
    </style>
}